[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''function ease_dollars(mod, instant)'''
match_indent = true
position = 'at'
payload = '''function ease_dollars(mod, instant, from_joker)'''

[[patches]]
[patches.pattern]
target = 'functions/common_events.lua'
pattern = '''local dollar_UI = G.HUD:get_UIE_by_ID('dollar_text_UI')'''
match_indent = true
position = 'before'
payload = '''if from_joker then table.insert(G.GAME.dead_letters_buffer, mod) end'''

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''ease_dollars(self.ability.extra)'''
match_indent = true
position = 'at'
payload = '''ease_dollars(self.ability.extra, nil, true)'''

# Delayed gratification
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''if self.ability.name == 'Delayed Gratification' and G.GAME.current_round.discards_used == 0 and G.GAME.current_round.discards_left > 0 then'''
match_indent = true
position = 'after'
payload = '''
table.insert(G.GAME.dead_letters_buffer, G.GAME.current_round.discards_left*self.ability.extra)
'''

# Satellite
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''if planets_used == 0 then return end'''
match_indent = true
position = 'after'
payload = '''
table.insert(G.GAME.dead_letters_buffer, self.ability.extra*planets_used)
'''

# Rocket
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''return self.ability.extra.dollars'''
match_indent = true
position = 'before'
payload = '''
table.insert(G.GAME.dead_letters_buffer, self.ability.extra.dollars)
'''

# Cloud 9
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''return self.ability.extra*(self.ability.nine_tally)'''
match_indent = true
position = 'before'
payload = '''
table.insert(G.GAME.dead_letters_buffer, self.ability.extra*(self.ability.nine_tally))
'''

# Golden Joker
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''if self.ability.set == "Joker" then
        if self.ability.name == 'Golden Joker' then'''
match_indent = true
position = 'after'
payload = '''
table.insert(G.GAME.dead_letters_buffer, self.ability.extra)
'''

# Business Card
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''pseudorandom('business') < G.GAME.probabilities.normal/self.ability.extra then'''
match_indent = true
position = 'after'
payload = '''
table.insert(G.GAME.dead_letters_buffer, 2)
'''

# Golden Ticket
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''if self.ability.name == 'Golden Ticket' and
                    SMODS.has_enhancement(context.other_card, 'm_gold') then'''
match_indent = true
position = 'after'
payload = '''
table.insert(G.GAME.dead_letters_buffer, self.ability.extra)
'''

# Faceless Joker
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''func = function()
                            ease_dollars(self.ability.extra.dollars)'''
match_indent = true
position = 'at'
payload = '''func = function()
    ease_dollars(self.ability.extra.dollars, nil, true)'''
    
# To-Do List
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''if self.ability.name == 'To Do List' and context.scoring_name == self.ability.to_do_poker_hand then
                        ease_dollars(self.ability.extra.dollars)'''
match_indent = true
position = 'at'
payload = '''if self.ability.name == 'To Do List' and context.scoring_name == self.ability.to_do_poker_hand then
    ease_dollars(self.ability.extra.dollars, nil, true)'''

# Reserved Parking
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''G.GAME.dollar_buffer = (G.GAME.dollar_buffer or 0) + self.ability.extra.dollars'''
match_indent = true
position = 'before'
payload = '''
table.insert(G.GAME.dead_letters_buffer, self.ability.extra.dollars)
'''
